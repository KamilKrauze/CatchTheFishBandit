name: Build and Push Docker Image (Geodata)

on:
  push:
    branches:
      - 'geo-data'

  workflow_dispatch:
    inputs:
      VM_Name:
        type: string
        description: The name of the VM
        required: true


env:
  REGISTRY: ghcr.io
  USERNAME: kamilkrauze
  IMAGE_NAME: catchthefishbandit
  TAG: geodata-api

  VM_NAME: geodata
  VM_REGION: europe-west1-b


jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log-in to container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PTA_TOKEN }}

      - name: Build and push the image
        run: |
          docker build . --tag ${{env.REGISTRY}}/${{env.USERNAME}}/${{env.IMAGE_NAME}}:${{env.TAG}}
          docker push ${{env.REGISTRY}}/${{env.USERNAME}}/${{env.IMAGE_NAME}}:${{env.TAG}}

  updvm-container:
    runs-on: ubuntu-latest
    needs: [build_and_push]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCLOUD_JSON_KEY }}

      - name: Authenticate on GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_JSON_KEY }}'

      - name: SSH into VM
        run: |
          gcloud compute ssh --project=${{ secrets.GCLOUD_PROJECT_ID }} \
            --zone=${{ env.VM_REGION }} ${{ env.VM_NAME }} \
            --quiet \
            --command="sudo docker stop geodata-api; \
              sudo docker rm geodata-api; \
              sudo docker image rm ${{env.REGISTRY}}/${{env.USERNAME}}/${{env.IMAGE_NAME}}:${{env.TAG}}; \
              sudo docker pull ${{env.REGISTRY}}/${{env.USERNAME}}/${{env.IMAGE_NAME}}:${{env.TAG}}; \
              sudo docker run -itd -p 80:80 --name geodata-api ${{env.REGISTRY}}/${{env.USERNAME}}/${{env.IMAGE_NAME}}:${{env.TAG}}"


  validate-container-on-VM:
    runs-on: ubuntu-latest
    needs: [updvm-container]
    steps:
      - name: Setup GCP SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCLOUD_JSON_KEY }}

      - name: Authenticate on GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_JSON_KEY }}'

      - name: Validate container
        run: |
          gcloud compute ssh --project=${{ secrets.GCLOUD_PROJECT_ID }} \
            --zone=${{ env.VM_REGION }} ${{ env.VM_NAME }} \
            --command="sudo docker ps -a"